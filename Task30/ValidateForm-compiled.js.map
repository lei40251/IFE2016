{"version":3,"sources":["ValidateForm.js"],"names":[],"mappings":"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","file":"ValidateForm-compiled.js","sourcesContent":["/* ~\r\n * ValidateForm v1.0\r\n * Copyright (c) 2016 22904003@qq.com\r\n * Licensed under the MIT license.\r\n *\r\n * Javascript 表单验证，无依赖\r\n *\r\n * */\r\n(function (window) {\r\n    function Validate(option) {\r\n        //默认参数\r\n        var _defaultOpt = {\r\n            //验证规则配置\r\n            \"items\": {\r\n                \".empty\": {\r\n                    \"msg\": \"请输入用户名\",\r\n                    \"error\": \"用户名错误\",\r\n                    \"success\": \"用户名可用\",\r\n                    \"required\": true,\r\n                    \"trim\": true,\r\n                    \"test\": function (val) {\r\n                        return val;\r\n                    }\r\n                },\r\n                \".psw\": {\r\n                    //默认提醒内容\r\n                    \"msg\": \"请输入6~8位密码\",\r\n                    //失败提醒内容\r\n                    \"error\": \"格式错误，请重新输入\",\r\n                    //成功提醒内容\r\n                    \"success\": \"用户名可用\",\r\n                    //是否校验\r\n                    \"required\": true,\r\n                    //是否清除前后的空格\r\n                    \"trim\": true,\r\n                    //校验方法\r\n                    \"test\": function (val) {\r\n                        return val;\r\n                    }\r\n                }\r\n            },\r\n            //返回提醒参数配置\r\n            \"msg\": {\r\n                //是否动态插入提醒节点\r\n                \"dynamic\": false,\r\n                //提醒节点的class属性值\r\n                \"class\": \"msg\",\r\n                //提醒节点各状态文字及input边框颜色\r\n                \"color\": {\r\n                    \"default\": \"#999\",\r\n                    \"error\": \"red\",\r\n                    \"success\": \"green\"\r\n                }\r\n            },\r\n            //需要验证的form表单\r\n            \"form\": '.validateForm',\r\n            //验证失败\r\n            \"fail\": function () {\r\n                alert('fail');\r\n            },\r\n            //验证通过\r\n            \"success\": function () {\r\n                alert('success');\r\n            }\r\n        };\r\n        this._opt = this._extend(_defaultOpt, option);\r\n    }\r\n\r\n    Validate.prototype = {\r\n        constructor: Validate,\r\n        /**\r\n         * 判断对象是否为空的方法\r\n         * @method isEmptyObj\r\n         * @param {Object} o 需要判断的对象\r\n         * @return { Boolean } 为空返回 [!0] true ，否则返回 [!1] false\r\n         * */\r\n        _isEmptyObj: function (o) {\r\n            var t;\r\n            for (t in o)\r\n                return !1;\r\n            return !0\r\n        },\r\n        /**\r\n         * 对象拷贝的方法\r\n         * @method extend\r\n         * @param {Object} Obj 原对象\r\n         * @param {Object} newObj 需要拷贝的对象\r\n         * @return { Object } Obj 拷贝后的对象\r\n         * */\r\n        _extend: function (Obj, newObj) {\r\n            if (!this._isEmptyObj(newObj)) {\r\n                for (let i in Obj) {\r\n                    Obj[i] = newObj[i];\r\n                }\r\n            }\r\n            return Obj;\r\n        },\r\n        /**\r\n         * 在节点后插入新节点方法\r\n         * @method insertAfter\r\n         * @param {Node} newNode 需要插入的新节点\r\n         * @param {Node} node 原节点\r\n         * */\r\n        _insertAfter: function (newNode, node) {\r\n            if (node.parentNode.lastChild == node) {\r\n                node.parentNode.appendChild(newNode);\r\n            } else {\r\n                node.parentNode.insertBefore(newNode, node.nextElementSibling);\r\n            }\r\n        },\r\n        /**\r\n         * 创建渲染消息提示节点方法\r\n         * @method renderMsg\r\n         * @param {String} color 提示文字及相关输入框border颜色\r\n         * @param {String} str 提示信息内容\r\n         * @param {Node} node 输入框节点\r\n         * */\r\n        _renderMsg: function (color, str, node) {\r\n            if (this._opt.msg.dynamic) {\r\n                if (node.nextElementSibling != null) {\r\n                    if (node.nextElementSibling.nodeName.toLocaleLowerCase() == 'span' && node.nextElementSibling.className.indexOf(this._opt.msg.class) > -1) {\r\n                        node.parentNode.removeChild(node.nextElementSibling);\r\n                    }\r\n                }\r\n                let tempSpan = document.createElement('span');\r\n                tempSpan.innerText = str;\r\n                tempSpan.className = this._opt.msg.class;\r\n                tempSpan.style.color = color;\r\n                this._insertAfter(tempSpan, node);\r\n            } else {\r\n                let tempSpan = document.querySelector(\".\" + this._opt.msg.class);\r\n                if (tempSpan != null) {\r\n                    tempSpan.innerText = str;\r\n                    tempSpan.style.color = color;\r\n                } else {\r\n                    this._opt.msg.dynamic = true;\r\n                    this._renderMsg(color, str, node);\r\n                }\r\n            }\r\n            node.style.borderColor = color;\r\n        },\r\n        /**\r\n         * 默认消息提示方法\r\n         * @method msgDefault\r\n         * @param {String} str 提示信息内容\r\n         * @param {Node} node 输入框节点\r\n         * */\r\n        _msgDefault: function (str, node) {\r\n            this._renderMsg(this._opt.msg.color.default, str, node);\r\n        },\r\n        /**\r\n         * 失败消息提示方法\r\n         * @method msgError\r\n         * @param {String} str 提示信息内容\r\n         * @param {Node} node 输入框节点\r\n         * */\r\n        _msgError: function (str, node) {\r\n            this._renderMsg(this._opt.msg.color.error, str, node);\r\n            return !1;\r\n        },\r\n        /**\r\n         * 成功消息提示方法\r\n         * @method msgSuccess\r\n         * @param {String} str 提示信息内容\r\n         * @param {Node} node 输入框节点\r\n         * */\r\n        _msgSuccess: function (str, node) {\r\n            this._renderMsg(this._opt.msg.color.success, str, node);\r\n            return !0;\r\n        },\r\n        /**\r\n         * 表单提交验证方法\r\n         * @method validitySubmit\r\n         * @param {Array} arr 需要校验的 class 组成的数组\r\n         * @return {Boolean} flag 全部通过返回 true，否则返回 false\r\n         * */\r\n        _validitySubmit: function (arr) {\r\n            var flag = true;\r\n            for (let m = 0; m < arr.length; ++m) {\r\n                let tempEle = document.querySelectorAll(arr[m]);\r\n                for (let n = 0; n < tempEle.length; ++n) {\r\n                    var item = this._opt.items[arr[m]];\r\n                    flag = this._validityItem(item, tempEle[n]);\r\n                }\r\n            }\r\n            return flag;\r\n        },\r\n        /**\r\n         * 表单单项验证方法\r\n         * @method validitySubmit\r\n         * @param {Object} item 需要校验的 class 对象\r\n         * @param {Node} node 输入框节点\r\n         * */\r\n        _validityItem: function (item, node) {\r\n            var tempStr = '';\r\n            if (item.trim == true) {\r\n                tempStr = node.value.trim();\r\n            } else {\r\n                tempStr = node;\r\n            }\r\n            if (item.trim == true) {\r\n                if (item.required == true) {\r\n                    if (item.test(tempStr)) {\r\n                        return this._msgSuccess(item.success, node);\r\n                    } else {\r\n                        return this._msgError(item.error, node);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * 表单验证事件绑定\r\n         * @method check\r\n         * */\r\n        check: function () {\r\n            var self = this;\r\n            var tempArr = Object.keys(self._opt.items);\r\n            for (let i = 0; i < tempArr.length; ++i) {\r\n                let tempEle = document.querySelectorAll(tempArr[i]);\r\n                for (let j = 0; j < tempEle.length; ++j) {\r\n                    tempEle[j].onfocus = function () {\r\n                        self._msgDefault(self._opt.items[tempArr[i]].msg, this);\r\n                    }\r\n                    tempEle[j].onblur = function () {\r\n                        var item = self._opt.items[tempArr[i]];\r\n                        self._validityItem(item, this);\r\n                    }\r\n                }\r\n            }\r\n\r\n            document.querySelector(self._opt.form).onsubmit = function () {\r\n                if (self._validitySubmit(tempArr)) {\r\n                    self._opt.success();\r\n                } else {\r\n                    self._opt.fail();\r\n                }\r\n                return !1;\r\n            }\r\n        }\r\n    }\r\n\r\n    window.Validate = function (option) {\r\n        new Validate(option).check();\r\n    }\r\n})(window)"]}